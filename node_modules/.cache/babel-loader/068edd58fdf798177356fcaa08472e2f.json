{"ast":null,"code":"var _jsxFileName = \"/Users/kittabit/Desktop/occasiongenius/src/Components/PersonalizedEvents.js\";\nimport React from 'react';\nimport Loading from './Loading';\nimport EventGridItem from \"./EventGridItem\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PersonalizedEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: 1\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: 0\n    });\n  }\n\n  render() {\n    let personalizedClassName = 'flex items-center justify-center bg-white mb-16';\n    let clearDivClassName = '';\n    let biggerGridItems = '0';\n    let blockTitleClassName = \"float-left text-gray-800 font-semibold mb-0\";\n\n    if (this.props.likes === 4 && this.props.personalized === 4 && this.props.clear === \"true\") {\n      clearDivClassName = \"clear-both\";\n      personalizedClassName += ' w-1/2 float-left pl-2';\n      biggerGridItems = '1';\n      blockTitleClassName += \" text-2xl\";\n    } else if (this.props.likes === 4 && this.props.personalized === 4) {\n      personalizedClassName += ' w-1/2 float-left pr-2';\n      biggerGridItems = '1';\n      blockTitleClassName += \" text-2xl\";\n    } else {\n      blockTitleClassName += \" text-3xl\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: personalizedClassName,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-12 px-18 gap-5\",\n          children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flow-root\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: blockTitleClassName,\n                  children: this.props.title ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: this.props.title\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: \"Recommended Events For You\"\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 41\n                }, this), this.props.liked && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/for-you\",\n                    className: \"no-underline\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"float-right bg-gray-800 text-white px-2 py-2 rounded-none text-base font-medium hover:bg-gray-800 transition duration-300 mt-[5px] pl-[15px] pr-[15px] uppercase text-base pt-[12px] leading-none hover:bg-gray-600 mt-0\",\n                      children: \"See More\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), this.props.events.map((item, index) => /*#__PURE__*/_jsxDEV(EventGridItem, {\n              item: item,\n              largerGrid: biggerGridItems\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clearDivClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default PersonalizedEvents;","map":{"version":3,"sources":["/Users/kittabit/Desktop/occasiongenius/src/Components/PersonalizedEvents.js"],"names":["React","Loading","EventGridItem","Link","PersonalizedEvents","Component","constructor","props","state","isLoading","componentDidMount","setState","render","personalizedClassName","clearDivClassName","biggerGridItems","blockTitleClassName","likes","personalized","clear","title","liked","events","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loading from './Loading';\nimport EventGridItem from \"./EventGridItem\"\nimport { Link } from 'react-router-dom';\nclass PersonalizedEvents extends React.Component {\n    \n    constructor (props){\n\n        super(props);\n        this.state = {\n            isLoading: 1\n        }\n        \n    }\n\n    componentDidMount() {\n\n        this.setState({\n            isLoading: 0\n        });\n  \n    }\n\n    render() {\n\n        let personalizedClassName = 'flex items-center justify-center bg-white mb-16';\n        let clearDivClassName = '';\n        let biggerGridItems = '0';\n        let blockTitleClassName = \"float-left text-gray-800 font-semibold mb-0\";\n\n\n        if (this.props.likes === 4 && this.props.personalized === 4 && this.props.clear === \"true\") {\n            clearDivClassName = \"clear-both\";\n            personalizedClassName += ' w-1/2 float-left pl-2';\n            biggerGridItems = '1';\n            blockTitleClassName += \" text-2xl\";\n        }else if (this.props.likes === 4 && this.props.personalized === 4) {\n            personalizedClassName += ' w-1/2 float-left pr-2';\n            biggerGridItems = '1';\n            blockTitleClassName += \" text-2xl\";\n        }else{\n            blockTitleClassName += \" text-3xl\";\n        }\n\n        return ( \n            <>\n\n                <div className={ personalizedClassName }>                          \n                    <div className=\"grid grid-cols-12 px-18 gap-5\">\n\n                        {this.state.isLoading ? (\n\n                            <Loading />\n\n                        ) : (\n                            <>\n\n                                <div className=\"col-span-12\">\n                                    <div className=\"flow-root\">\n                                        <p className={ blockTitleClassName }>\n                                            {this.props.title ? (\n                                                <>\n                                                    { this.props.title }\n                                                </>\n                                            ) : (\n                                                <>\n                                                    Recommended Events For You\n                                                </>\n                                            )}                                            \n                                        </p>\n\n                                        {this.props.liked &&\n                                            <>\n                                                <Link to=\"/for-you\" className=\"no-underline\">\n                                                    <button className=\"float-right bg-gray-800 text-white px-2 py-2 rounded-none text-base font-medium hover:bg-gray-800 transition duration-300 mt-[5px] pl-[15px] pr-[15px] uppercase text-base pt-[12px] leading-none hover:bg-gray-600 mt-0\">\n                                                        See More\n                                                    </button>    \n                                                </Link>\n                                            </>\n                                        }\n\n                                    </div>\n                                </div>\n\n                                {this.props.events.map((item, index) => (   \n                                    <EventGridItem item={item} key={index} largerGrid={ biggerGridItems } />\n                                ))}\n\n                            </>\n                        )}     \n\n                    </div> \n                </div>\n\n                <div className={ clearDivClassName }></div>\n\n            </>\n\n        );\n\n    }\n\n}\n\nexport default PersonalizedEvents;"]},"metadata":{},"sourceType":"module"}